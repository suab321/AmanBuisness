{"ast":null,"code":"var _jsxFileName = \"/home/abhinav/Desktop/aman/front/src/components/question/EachQuestion.jsx\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass EachQuestion extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.value.options);\n    this.state = {\n      id: null,\n      question: \"\",\n      options: [],\n      answer: \"\",\n      solution: \"\",\n      color: '',\n      selected: '',\n      showSolution: false\n    };\n    this.Selected = this.Selected.bind(this);\n    this.Check = this.Check.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: this.props.value.id,\n      question: this.props.value.question,\n      options: this.props.value.options,\n      answer: this.props.value.answer,\n      solution: this.props.value.solution\n    });\n  }\n\n  Selected() {// this.setState({color:});\n  }\n\n  Check() {\n    if (this.state.answer === this.state.selected) this.props.CorrectAnswer();else this.setState({\n      showSolution: true\n    });\n  }\n\n  render() {\n    console.log(this.props.value);\n\n    if (this.props.value.options.length === 4) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: this.state.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, this.props.value.question), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onClick: this.Selected,\n        value: this.state.options[0],\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onClick: this.Selected,\n        value: this.state.options[1],\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onClick: this.Selected,\n        value: this.state.options[2],\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onClick: this.Selected,\n        value: this.state.options[3],\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.Check,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Check\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        hidden: this.state.showSolution,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, this.state.showSolution));\n    } else {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"Please Wait\");\n    }\n  }\n\n}\n\nexport default EachQuestion;","map":{"version":3,"sources":["/home/abhinav/Desktop/aman/front/src/components/question/EachQuestion.jsx"],"names":["React","Button","EachQuestion","Component","constructor","props","console","log","value","options","state","id","question","answer","solution","color","selected","showSolution","Selected","bind","Check","componentDidMount","setState","CorrectAnswer","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass EachQuestion extends React.Component{\n\n    constructor(props){\n        super(props);\n        console.log(this.props.value.options);\n        this.state={\n            id:null,\n            question:\"\",\n            options:[],\n            answer:\"\",\n            solution:\"\",\n            color:'',\n            selected:'',\n            showSolution:false\n        };\n        this.Selected=this.Selected.bind(this);\n        this.Check=this.Check.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            id:this.props.value.id,\n            question:this.props.value.question,\n            options:this.props.value.options,\n            answer:this.props.value.answer,\n            solution:this.props.value.solution\n        });\n    }\n\n    Selected(){\n        // this.setState({color:});\n    }\n    Check(){\n        if(this.state.answer===this.state.selected)\n            this.props.CorrectAnswer();\n        else\n            this.setState({showSolution:true})\n    }\n\n\n    render(){\n        console.log(this.props.value);\n        if(this.props.value.options.length===4){\n            return(\n                <div style={{color:this.state.color}}>\n                    <h1>{this.props.value.question}</h1>\n                    <input type=\"text\" onClick={this.Selected} value={this.state.options[0]} readOnly/>\n                    <input type=\"text\" onClick={this.Selected} value={this.state.options[1]} readOnly/>\n                    <input type=\"text\" onClick={this.Selected} value={this.state.options[2]} readOnly/>\n                    <input type=\"text\" onClick={this.Selected} value={this.state.options[3]} readOnly/>\n                    <Button onClick={this.Check}>Check</Button>\n                    <textarea hidden={this.state.showSolution}>{this.state.showSolution}</textarea>\n                </div>\n            );\n        }\n        else{\n            return(\n                <h1>Please Wait</h1>\n            );\n        }\n    }\n}\n\nexport default EachQuestion;"]},"metadata":{},"sourceType":"module"}